[meta title:"Stack Scroll" description:"Tutorial on Stacked Scrolling" /]


[Header
      title:"Smooth Narrative Transitions with Stacked Scrollers"
      subtitle:"A walkthrough"
      author:"Megan Vo"/]

    [a href:"https://idyll-lang.org/" target:"_blank"]Idyll's[/a] Scroller component is a useful way to incorporate
    more narrative structure into an article. This tutorial will focus on how to incorporate **multiple** Scroller components in one Idyll
    document to further aid your scrollytelling needs. If you are not familiar with the Idyll's Scrollers, take a peek at this 
    [a href:"https://idyll-lang.org/gallery/scaffolding-interactives" target:"_blank"]tutorial[/a] first. Otherwise, let's get 
    started!

    [br/]
    
    ### What are Stacked Scrollers?
    Instead of one Scroller component per document, stacking Scrollers simply translates to 
    declaring multiple Scroller components one after another. This way, each Scroller can be thought of as its own 
    section with **steps** that can only be controlled by their corresponding parent Scroller.

    [br/]

    ### Why Stack?
    Stacking allows us to easily transition between the different **graphics** of each component. Take for example, 
    the smooth transitions between the graphics of the article below.

    [figure]
      [img src:"static/images/fugazi.gif" class:"gif" /]
      [figcaption]
        [a href:"https://idyll-lang.org/gallery/the-d-i-y-data-of-fugazi" target:"_blank"]The D-I-Y Data of Fugazi[/a]
        by Matthew Conlen. 
      [/figcaption]
    [/figure]
    It allows the graphics of each Scroller to slide up and replace the previous 
    graphic on the screen -- and quite easily too. Since each Scroller component only allows 
    for one graphic, switching between graphics is a bit more difficult and 
    clunky when using just one Scroller.
    
    // Show gif comparison here  

    Perhaps one of the biggest perks is that stacking lets us include multiple animated graphics because each Scroller
    controls their **own** set of steps. This also gives us greater customizeability
    in terms of style and functionality since every Scroller has a corresponding **id**.

    [br/]
    ### Let's Build Something
    To get acquainted with stacked scrolling, below is a short example with 
    code snippets afterward. 
    For this scrolly example, we only made changes to the **styles.css** and **index.idyll** files.


    [img src:"static/images/arrow.svg" class:"arrow"/]


[var name:"barStep" value:0 /]


[Scroller currentStep:barStep]
  
    [Graphic class:"bar"]
        [img src:"static/images/bar.png"
        class:`barStep < 1 ? "pic" : "pic rotate" + barStep `/]
    [/Graphic]


  [Step id:"firstStep"]
    The bar on the right belongs to this first Scroller component. Watch how it rotates 
    as you scroll to the next step.
  [/Step]
  [Step]
    [p]We've reached the next step! You can animate a graphic within a particular Scroller based on what step is entered.[/p]
    You can keep track of the step you are on for a particular scroller by assigning a variable to the 
    **currentStep** prop of the component.
  [/Step]

  [Step]
    [p]But let's say you want to include another graphic. We could stay here on this Scroller but it would 
    get a little messy... [/p]

    Sounds like it's time to **stack**!
  [/Step]
[/Scroller]

[var name:"circleStep" value:0/]
[Scroller currentStep:circleStep]
  [Graphic]
      [img src:"static/images/circle.png"
      class:`circleStep < 1 ? "pic" : "pic enlarge"`/]
  [/Graphic]
  [Step id:"secondStep"]
    You've reached the second Scroller! Here we've changed the graphic as well as the 
    **CSS** of the new Scroller. Watch for a different animation as you enter 
    this one's next step.
  [/Step]
  [Step]
    [p]
    Because each Scroller has a unique **id**, we can leverage that to create a diverse set 
    of customizeable animated graphics. The id format is #idyll-scroll-#, with the first scroller 
    starting at 0.  [/p]
    
    Since this is the second Scroller, we're currently working with #idyll-scroll-1.
  [/Step]
[/Scroller]

You'll need the 
    [a href:"https://github.com/idyll-lang/idyll/tree/master/packages/idyll-components/src" target:"_blank"]scroller.js and text-container.js components[/a].
    If you want, you can use the default [a href:"https://github.com/megan-vo/stacked-scrolling-tutorial/tree/master/static/images" target:"_blank"]bar and circle images[/a] as well.